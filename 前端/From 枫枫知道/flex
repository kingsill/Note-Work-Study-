[CSS3 弹性盒子 | 菜鸟教程](https://www.runoob.com/css3/css3-flexbox.html)

[枫枫知道个人博客](https://www.fengfengzhidao.com/special/2/33)

# felx布局

CSS3 弹性盒（ Flexible Box 或 flexbox），是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。

引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间。



弹性容器外及弹性子元素内是正常渲染的。弹性盒子只定义了弹性子元素如何在弹性容器内布局。

弹性子元素通常在弹性盒子内一行显示。默认情况每个容器只有一行。

---

快捷语句

```css
.flex>.item*8
/*按table键后会自动生成下面内容*/
<div class="flex">
    <div class="table"></div>
    <div class="table"></div>
    <div class="table"></div>
    <div class="table"></div>
    <div class="table"></div>
    <div class="table"></div>
    <div class="table"></div>
    <div class="table"></div>
</div>
```

---

采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。

它的所有 子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项目"。



## 容器属性

```css
<!DOCTYPE html>
<html>
<head>
    <style>
        .box {

        }

        .flex {
            width: 400px;
            height: 500px;
            display: flex;
            justify-content: space-around; /*定义项目在主轴上的排序方式*/
            flex-direction: row; /*主轴方向*/
            align-items: center; /*交叉轴上对齐方式*/
            background-color: darkgray;
            flex-wrap: wrap; /*换行*/
        }

        .flex .item {
            width: 100px;
        }

        .item {
            width: 40px;
            height: 40px;
            background-color: #198464;
            display: inline-block;
        }

    </style>
</head>
<body>

<div class="flex">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
    <div class="item">5</div>
    <div class="item">6</div>
    <div class="item">7</div>
    <div class="item">8</div>
</div>


</body>
</html>
```



## 项目属性

```css
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>flex2</title>
    <style>

        .flex {
            display: flex;
            /*width: 400px;*/
            height: 400px;
            background-color: bisque;
            justify-content: space-around;
        }

        .item {
            width: 40px;
            height: 40px;
            background-color: coral;
            text-align: center;
            margin: 2px;
        }

        .flex2 {
            display: flex;
            width: 200px;
            height: 200px;
            background-color: antiquewhite;
            /*justify-content: space-around;*/
        }

        .flex3 {
            display: flex;
            width: 200px;
            height: 200px;
            background-color: antiquewhite;
            /*justify-content: space-around;*/
        }

        /*
        margin可以实现布局的上下左右位置的分布
        */
        .flex3 .item:nth-child(2) {
            margin: auto;
        }

        .flex2 .item:nth-child(2) {
            margin: 0 auto;
        }


    </style>
</head>
<body>
<div class="flex">
    <div class="item" style="order: 8">1</div>
    <div class="item" style="flex-grow: 0.5">2</div>
    <div class="item" style="flex-grow: 1;align-self: center">3</div>
    <div class="item" style="flex-grow: 1">4</div>
</div>

<div class="flex2">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
</div>

<div class="flex3">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
</div>


</body>
</html>
```

