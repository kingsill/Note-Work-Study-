# 数据容器

列表、元组、字符串、集合、字典

## 列表 list 和元组tuple

### 列表list []

list中的数据类型不需要一直，可以包含多种数据类型

list使用中括号`list1=[1,'red,True]`

### 列表的下标索引

从0开始，左闭右开

还可以 **倒数**，-1为最后一个元素

### 列表的方法

**方法**：方法就是针对某个具体类型（类）的函数

1. index
   查询元素在列表中的下标

   

2. insert(下标，元素)

3. append(元素)
   插入到末尾

4. extend(其他数据容器)
   将**其他数据容器的内容取出**放到原数据容器中

5. del 列表[下标]

6. 列表.pop(下标)
   返回值为下标内容，可以理解为取出内容

7. 列表.remove(元素)
   删除找到的第一个对应元素

8. len

9. count

   



### tuple 元组 ()

不可以修改

1. index
2. count
3. len





## 集合 {}

集合是无序的，且不可重复

所以不支持下标索引

**创建：**

> set1={1,2,3,4}  直接以**{}**创建
>
> set2=set([1,2,3,4])  **使用set进行创建**

添加：

> set1.add()
>
> set2.update()

删除

> set1.reomove()  如果没有会出错
>
> set2.discard()  没有的话也不会出错
>
> set3.pop() 随机弹出一个并删除
>
> set4.clear（） 清空集合



方法：

> set3=set**.difference**(set2)  取出两个集合的差集，set1里有但是set2里面没有
>
> set1.**difference_update**(set2)  在集合1内，删除和集合2相同的元素
>
> set3= set1.**unior**(set2)   将两个集合合并 
>
> **len**(set1) 统计集合里的个数
>
> 

不支持while，但是支持for









## str 字符串

字符串不可修改

1. index 查找内容下标

2. replace

   > new字符串=字符串.replace(字符串 1，字符串2)   **将字符串中字符串1替换为字符串2**，创建的新的字符串 

3. 分割 split

   > 字符串.split(分隔符)	按照指定分割符，将字符串分割并放入到列表中

4. strip 取出前后空格 \n等

5. 字符串.count("")

   > 数count中包含多少个”“中字符



## dict 字典

key不重复

使用键值对进行存储

key不能为字典，但是value可以是任意数据类型



删除元素

> pop(key) 弹出key对应的值同时删除
>
> dict.clear



方法：

> dict.keys()	获取所有的key
> 			直接for循环dict
>
> len(dict) 	统计元素数量



可以使用for进行遍历





# 序列

内容**连续、有序**，可使用**下标索引**的一类数据容器

列表、元组、字符串

## 切片

从序列中的得到新序列

`语法：序列[起始下标：结束下标：步长]`

可以反向取数

![image-20241105100200176](data_container.assets/image-20241105100200176.png)



# 通用操作

len ，max, min

字符串如何比大小：

> 通过ASCII码
>
> 按位比较，从前往后



容器转列表：`list()`

> 字典转列表 	不会保留value



容器转元组`tuple()`


容器转字符串`str()`

> 字典转字符串	会保留 value



容器转集合`set()`

> 字典转集合	 不会保留value





**排序**

> sorted(container,[reverse=True])		排序完成之后，放入到列表中



