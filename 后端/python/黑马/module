# python模块

导入语法

`[from 模块] import [模块|类|变量|函数|*] [as 别名] `

[]代表为可选的意思

通过.可以使用模块的功能（类、函数、变量）



import*的区别是

> 不用* time.sleep()
>
> 用*   sleep()



# 自定义模块并导入

## 如何自定义

正常创建文件，import文件名称即可，里面的函数都可以使用



## 同名的功能

后面导入的会覆盖前面的



## ——main——

当引入别的包时，会自动运行其中内容，



只有在本包内直接运行时才会执行的代码：
```python
id __name="__main__":
    ......
```

——name——会读取运行方式

每个模块都有一个__name__属性，当其值是'__main__'时，表明该模块自身在运行，否则是被引入

__main__变量



## ——all——变量

只能导入这个列表中元素

```python
__all__=[test1]

def test1:
    return 1
def test2:
    return 2
```

只会导入test1



# python包

目录只有包含一个叫做 __init__.py 的文件才会被认作是一个包

![image-20241106164818022](https://zilong-blog-butterfly.oss-cn-shanghai.aliyuncs.com/article/image-20241106164818022.png)

最简单的情况，放一个空的 :file:__init__.py就可以了。

如果包定义文件 **__init__.py** 存在一个叫做 **__all__** 的列表变量，那么在使用 **from package import \*** 的时候就把这个列表中的所有名字作为包内容导入。



## 安装第三方包

`pip install ….`

